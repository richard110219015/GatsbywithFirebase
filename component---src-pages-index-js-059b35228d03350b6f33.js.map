{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Firebase/firebase.js","webpack:///./src/components/Firebase/context.js","webpack:///./src/components/Firebase/index.js","webpack:///./src/components/Session/context.js","webpack:///./src/components/Session/withAuthentication.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/constants/routes.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Session/withAuthorization.js","webpack:///./src/components/Session/withEmailVerification.js","webpack:///./src/components/Session/index.js","webpack:///./src/constants/roles.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SignOut/index.js","webpack:///./src/components/Navigation/index.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","LandingPage","a","createElement","dangerouslySetInnerHTML","__html","firebase","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","Consumer","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","app","_this","this","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","process","GATSBY_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","users","message","messages","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","getFirebase","d","context","context_withFirebase","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","call","_initFirebase","firebaseInit","listener","localStorage","setItem","JSON","stringify","setState","removeItem","state","_proto","prototype","componentDidMount","parse","getItem","componentDidUpdate","componentWillUnmount","render","_context__WEBPACK_IMPORTED_MODULE_1__","Provider","value","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","LANDING","SIGN_UP","SIGN_IN","HOME","ACCOUNT","PASSWORD_FORGET","ADMIN","m","module","exports","require","default","withAuthorization","condition","WithAuthorization","_len","arguments","length","args","Array","_key","apply","concat","navigate","ROUTES","_this2","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","Session_withAuthorization","Session_withEmailVerification","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","json","NavigationAuth","gatsby_browser_entry","to","ROLES","SignOut","NavigationNonAuth","Navigation","Session","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Layout","Promise","all","e","t","bind","values","AppWithAuthentication","children","react","components_Navigation"],"mappings":"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","file":"component---src-pages-index-js-059b35228d03350b6f33.js","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nimport Layout from '../components/layout';\r\n\r\nconst LandingPage = () => (\r\n  <Fragment>\r\n    <h1>Landing</h1>\r\n    <p>\r\n      The Landing Page is open to everyone, even though the user isn't\r\n      signed in.\r\n    </p>\r\n  </Fragment>\r\n);\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <LandingPage />\r\n    <div dangerouslySetInnerHTML={{ __html: `<h1>123456</h1>` }} />\r\n  </Layout>\r\n);\r\n","const config = {\r\n  apiKey: \"AIzaSyCi6P1abcy72QaTwfV7ZQHczpsJo6wOzvw\",\r\n  authDomain: \"gatsbyfb-8e6d6.firebaseapp.com\",\r\n  databaseURL: \"https://gatsbyfb-8e6d6.firebaseio.com\",\r\n  projectId: \"gatsbyfb-8e6d6\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"921327650405\",\r\n  appId: \"1:921327650405:web:e247fd630bfd6e9a\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor(app) {\r\n    app.initializeApp(config);\r\n\r\n    /* Helper */\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n\r\n    /* Firebase APIs */\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n    /* Social Sign In Method Provider */\r\n\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () =>\r\n    this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignInWithFacebook = () =>\r\n    this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n  doSignInWithTwitter = () =>\r\n    this.auth.signInWithPopup(this.twitterProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.GATSBY_CONFIRMATION_EMAIL_REDIRECT,\r\n    });\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  // *** Message API ***\r\n\r\n  message = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n}\r\n\r\nlet firebase;\r\n\r\nfunction getFirebase(app, auth, database) {\r\n  if (!firebase) {\r\n    firebase = new Firebase(app, auth, database);\r\n  }\r\n\r\n  return firebase;\r\n}\r\n\r\nexport default getFirebase;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport getFirebase from './firebase';\r\n\r\nexport default getFirebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    _initFirebase = false;\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    firebaseInit = () => {\r\n      if (this.props.firebase && !this._initFirebase) {\r\n        this._initFirebase = true;\r\n\r\n        this.listener = this.props.firebase.onAuthUserListener(\r\n          authUser => {\r\n            localStorage.setItem(\r\n              'authUser',\r\n              JSON.stringify(authUser),\r\n            );\r\n            this.setState({ authUser });\r\n          },\r\n          () => {\r\n            localStorage.removeItem('authUser');\r\n            this.setState({ authUser: null });\r\n          },\r\n        );\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.setState({\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      });\r\n\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener && this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const ADMIN = '/admin';\r\nexport const ADMIN_DETAILS = '/admin/:id';\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\r\nimport { navigate } from 'gatsby';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    _initFirebase = false;\r\n\r\n    firebaseInit = () => {\r\n      if (this.props.firebase && !this._initFirebase) {\r\n        this._initFirebase = true;\r\n\r\n        this.listener = this.props.firebase.onAuthUserListener(\r\n          authUser => {\r\n            if (!condition(authUser)) {\r\n              navigate(ROUTES.SIGN_IN);\r\n            }\r\n          },\r\n          () => navigate(ROUTES.SIGN_IN),\r\n        );\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener && this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst needsEmailVerification = authUser =>\r\n  authUser &&\r\n  !authUser.emailVerified &&\r\n  authUser.providerData\r\n    .map(provider => provider.providerId)\r\n    .includes('password');\r\n\r\nconst withEmailVerification = Component => {\r\n  class WithEmailVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { isSent: false };\r\n    }\r\n\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check you E-Mails (Spam\r\n                    folder included) for a confirmation E-Mail.\r\n                    Refresh this page once you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check you E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail or send\r\n                    another confirmation E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithEmailVerification);\r\n};\r\n\r\nexport default withEmailVerification;\r\n","import AuthUserContext from './context';\r\nimport withAuthentication from './withAuthentication';\r\nimport withAuthorization from './withAuthorization';\r\nimport withEmailVerification from './withEmailVerification';\r\n\r\nexport {\r\n  AuthUserContext,\r\n  withAuthentication,\r\n  withAuthorization,\r\n  withEmailVerification,\r\n};\r\n","export const ADMIN = 'ADMIN';\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={firebase ? firebase.doSignOut : () => {}}\r\n  >\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport * as ROLES from '../../constants/roles';\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? (\r\n        <NavigationAuth authUser={authUser} />\r\n      ) : (\r\n        <NavigationNonAuth />\r\n      )\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    {!!authUser.roles[ROLES.ADMIN] && (\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin</Link>\r\n      </li>\r\n    )}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport Navigation from './Navigation';\r\nimport getFirebase, { FirebaseContext } from './Firebase';\r\nimport withAuthentication from './Session/withAuthentication';\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    firebase: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const app = import('firebase/app');\r\n    const auth = import('firebase/auth');\r\n    const database = import('firebase/database');\r\n\r\n    Promise.all([app, auth, database]).then(values => {\r\n      const firebase = getFirebase(values[0]);\r\n\r\n      this.setState({ firebase });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FirebaseContext.Provider value={this.state.firebase}>\r\n        <AppWithAuthentication {...this.props} />\r\n      </FirebaseContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppWithAuthentication = withAuthentication(({ children }) => (\r\n  <Fragment>\r\n    <Navigation />\r\n    <hr />\r\n    {children}\r\n  </Fragment>\r\n));\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}