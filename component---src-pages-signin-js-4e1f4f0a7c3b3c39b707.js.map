{"version":3,"sources":["webpack:///./src/components/SignIn/index.js","webpack:///./src/pages/signin.js","webpack:///./src/components/Firebase/firebase.js","webpack:///./src/components/Firebase/context.js","webpack:///./src/components/Firebase/index.js","webpack:///./src/components/Session/context.js","webpack:///./src/components/Session/withAuthentication.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/constants/routes.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Session/withAuthorization.js","webpack:///./src/components/Session/withEmailVerification.js","webpack:///./src/components/Session/index.js","webpack:///./src/constants/roles.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SignOut/index.js","webpack:///./src/components/Navigation/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/PasswordForget/index.js","webpack:///./src/components/SignUp/index.js"],"names":["INITIAL_STATE","email","password","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","props","_this","_Component","call","this","onSubmit","event","_this$state","state","firebase","doSignInWithEmailAndPassword","then","setState","Object","assign","navigate","ROUTES","catch","preventDefault","onChange","_this$setState","target","name","value","render","_this$state2","isInvalid","react_default","a","createElement","type","placeholder","disabled","message","Component","SignInGoogleBase","_this2","_Component2","doSignInWithGoogle","socialAuthUser","user","uid","set","username","displayName","roles","code","SignInFacebookBase","_this3","_Component3","doSignInWithFacebook","additionalUserInfo","profile","SignInTwitterBase","_this4","_Component4","doSignInWithTwitter","SignInForm","withFirebase","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","react","SignIn","PasswordForget","SignUp","__webpack_exports__","layout","signin_SignInPage","FirebaseContext","React","createContext","Consumer","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","app","doCreateUserWithEmailAndPassword","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","googleProvider","facebookProvider","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","process","GATSBY_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","once","snapshot","dbUser","val","emailVerified","providerData","db","ref","users","messages","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","getFirebase","__webpack_require__","d","context","context_withFirebase","react__WEBPACK_IMPORTED_MODULE_0__","AuthUserContext","n","withAuthentication","WithAuthentication","_React$Component","_initFirebase","firebaseInit","listener","localStorage","setItem","JSON","stringify","removeItem","_proto","prototype","componentDidMount","parse","getItem","componentDidUpdate","componentWillUnmount","react__WEBPACK_IMPORTED_MODULE_0___default","_context__WEBPACK_IMPORTED_MODULE_1__","Provider","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","LANDING","SIGN_UP","SIGN_IN","HOME","ACCOUNT","PASSWORD_FORGET","ADMIN","m","module","exports","require","default","withAuthorization","condition","WithAuthorization","_len","arguments","length","args","Array","_key","apply","concat","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","onClick","Session_withAuthorization","Session_withEmailVerification","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","json","NavigationAuth","gatsby_browser_entry","to","ROLES","SignOut","NavigationNonAuth","Navigation","Session","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Layout","Promise","all","e","t","bind","values","AppWithAuthentication","children","components_Navigation","PasswordForgetForm","react__WEBPACK_IMPORTED_MODULE_2___default","PasswordForgetLink","gatsby__WEBPACK_IMPORTED_MODULE_3__","passwordOne","passwordTwo","isAdmin","SignUpFormBase","onChangeCheckbox","_this$setState2","checked","SignUpLink"],"mappings":"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","file":"component---src-pages-signin-js-4e1f4f0a7c3b3c39b707.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { navigate } from 'gatsby';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS =\r\n  'auth/account-exists-with-different-credential';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with an E-Mail address to\r\n  this social account already exists. Try to login from\r\n  this account instead and associate your social accounts on\r\n  your personal account page.\r\n`;\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        navigate(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === '' || email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInGoogleBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithGoogle()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.user.displayName,\r\n          email: socialAuthUser.user.email,\r\n          roles: {},\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        navigate(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Google</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInFacebookBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithFacebook()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.additionalUserInfo.profile.name,\r\n          email: socialAuthUser.additionalUserInfo.profile.email,\r\n          roles: {},\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        navigate(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Facebook</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInTwitterBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithTwitter()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.additionalUserInfo.profile.name,\r\n          email: socialAuthUser.additionalUserInfo.profile.email,\r\n          roles: {},\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        navigate(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Twitter</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = withFirebase(SignInFormBase);\r\n\r\nconst SignInGoogle = withFirebase(SignInGoogleBase);\r\n\r\nconst SignInFacebook = withFirebase(SignInFacebookBase);\r\n\r\nconst SignInTwitter = withFirebase(SignInTwitterBase);\r\n\r\nexport default SignInForm;\r\n\r\nexport { SignInGoogle, SignInFacebook, SignInTwitter };\r\n","import React, { Fragment } from 'react';\r\n\r\nimport Layout from '../components/layout';\r\nimport SignInForm, {\r\n  SignInGoogle,\r\n  SignInFacebook,\r\n  SignInTwitter,\r\n} from '../components/SignIn';\r\nimport { SignUpLink } from '../components/SignUp';\r\nimport { PasswordForgetLink } from '../components/PasswordForget';\r\n\r\nconst SignInPage = () => (\r\n  <Fragment>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <SignInGoogle />\r\n    <SignInFacebook />\r\n    <SignInTwitter />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </Fragment>\r\n);\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <SignInPage />\r\n  </Layout>\r\n);\r\n","const config = {\r\n  apiKey: \"AIzaSyCi6P1abcy72QaTwfV7ZQHczpsJo6wOzvw\",\r\n  authDomain: \"gatsbyfb-8e6d6.firebaseapp.com\",\r\n  databaseURL: \"https://gatsbyfb-8e6d6.firebaseio.com\",\r\n  projectId: \"gatsbyfb-8e6d6\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"921327650405\",\r\n  appId: \"1:921327650405:web:e247fd630bfd6e9a\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor(app) {\r\n    app.initializeApp(config);\r\n\r\n    /* Helper */\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n\r\n    /* Firebase APIs */\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n    /* Social Sign In Method Provider */\r\n\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () =>\r\n    this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignInWithFacebook = () =>\r\n    this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n  doSignInWithTwitter = () =>\r\n    this.auth.signInWithPopup(this.twitterProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.GATSBY_CONFIRMATION_EMAIL_REDIRECT,\r\n    });\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  // *** Message API ***\r\n\r\n  message = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n}\r\n\r\nlet firebase;\r\n\r\nfunction getFirebase(app, auth, database) {\r\n  if (!firebase) {\r\n    firebase = new Firebase(app, auth, database);\r\n  }\r\n\r\n  return firebase;\r\n}\r\n\r\nexport default getFirebase;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport getFirebase from './firebase';\r\n\r\nexport default getFirebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    _initFirebase = false;\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    firebaseInit = () => {\r\n      if (this.props.firebase && !this._initFirebase) {\r\n        this._initFirebase = true;\r\n\r\n        this.listener = this.props.firebase.onAuthUserListener(\r\n          authUser => {\r\n            localStorage.setItem(\r\n              'authUser',\r\n              JSON.stringify(authUser),\r\n            );\r\n            this.setState({ authUser });\r\n          },\r\n          () => {\r\n            localStorage.removeItem('authUser');\r\n            this.setState({ authUser: null });\r\n          },\r\n        );\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.setState({\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      });\r\n\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener && this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const ADMIN = '/admin';\r\nexport const ADMIN_DETAILS = '/admin/:id';\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\r\nimport { navigate } from 'gatsby';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    _initFirebase = false;\r\n\r\n    firebaseInit = () => {\r\n      if (this.props.firebase && !this._initFirebase) {\r\n        this._initFirebase = true;\r\n\r\n        this.listener = this.props.firebase.onAuthUserListener(\r\n          authUser => {\r\n            if (!condition(authUser)) {\r\n              navigate(ROUTES.SIGN_IN);\r\n            }\r\n          },\r\n          () => navigate(ROUTES.SIGN_IN),\r\n        );\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener && this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst needsEmailVerification = authUser =>\r\n  authUser &&\r\n  !authUser.emailVerified &&\r\n  authUser.providerData\r\n    .map(provider => provider.providerId)\r\n    .includes('password');\r\n\r\nconst withEmailVerification = Component => {\r\n  class WithEmailVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { isSent: false };\r\n    }\r\n\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check you E-Mails (Spam\r\n                    folder included) for a confirmation E-Mail.\r\n                    Refresh this page once you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check you E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail or send\r\n                    another confirmation E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithEmailVerification);\r\n};\r\n\r\nexport default withEmailVerification;\r\n","import AuthUserContext from './context';\r\nimport withAuthentication from './withAuthentication';\r\nimport withAuthorization from './withAuthorization';\r\nimport withEmailVerification from './withEmailVerification';\r\n\r\nexport {\r\n  AuthUserContext,\r\n  withAuthentication,\r\n  withAuthorization,\r\n  withEmailVerification,\r\n};\r\n","export const ADMIN = 'ADMIN';\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={firebase ? firebase.doSignOut : () => {}}\r\n  >\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport * as ROLES from '../../constants/roles';\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? (\r\n        <NavigationAuth authUser={authUser} />\r\n      ) : (\r\n        <NavigationNonAuth />\r\n      )\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    {!!authUser.roles[ROLES.ADMIN] && (\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin</Link>\r\n      </li>\r\n    )}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport Navigation from './Navigation';\r\nimport getFirebase, { FirebaseContext } from './Firebase';\r\nimport withAuthentication from './Session/withAuthentication';\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    firebase: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const app = import('firebase/app');\r\n    const auth = import('firebase/auth');\r\n    const database = import('firebase/database');\r\n\r\n    Promise.all([app, auth, database]).then(values => {\r\n      const firebase = getFirebase(values[0]);\r\n\r\n      this.setState({ firebase });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FirebaseContext.Provider value={this.state.firebase}>\r\n        <AppWithAuthentication {...this.props} />\r\n      </FirebaseContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppWithAuthentication = withAuthentication(({ children }) => (\r\n  <Fragment>\r\n    <Navigation />\r\n    <hr />\r\n    {children}\r\n  </Fragment>\r\n));\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default withFirebase(PasswordForgetForm);\r\n\r\nexport { PasswordForgetLink };\r\n","import React, { Component } from 'react';\r\nimport { Link, navigate } from 'gatsby';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport * as ROLES from '../../constants/roles';\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  isAdmin: false,\r\n  error: null,\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with this E-Mail address already exists.\r\n  Try to login with this account instead. If you think the\r\n  account is already used from one of the social logins, try\r\n  to sign in with one of them. Afterward, associate your accounts\r\n  on your personal account page.\r\n`;\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin } = this.state;\r\n    const roles = {};\r\n\r\n    if (isAdmin) {\r\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\r\n    }\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase.user(authUser.user.uid).set({\r\n          username,\r\n          email,\r\n          roles,\r\n        });\r\n      })\r\n      .then(() => {\r\n        return this.props.firebase.doSendEmailVerification();\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        navigate(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <label>\r\n          Admin:\r\n          <input\r\n            name=\"isAdmin\"\r\n            type=\"checkbox\"\r\n            checked={isAdmin}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nexport default withFirebase(SignUpFormBase);\r\n\r\nexport { SignUpLink };\r\n"],"sourceRoot":""}