{"version":3,"sources":["webpack:///./src/components/PasswordChange/index.js","webpack:///./src/components/LoginManagement/index.js","webpack:///./src/pages/account.js","webpack:///./src/components/Firebase/firebase.js","webpack:///./src/components/Firebase/context.js","webpack:///./src/components/Firebase/index.js","webpack:///./src/components/Session/context.js","webpack:///./src/components/Session/withAuthentication.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/constants/routes.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Session/withAuthorization.js","webpack:///./src/components/Session/withEmailVerification.js","webpack:///./src/components/Session/index.js","webpack:///./src/constants/roles.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SignOut/index.js","webpack:///./src/components/Navigation/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/PasswordForget/index.js"],"names":["INITIAL_STATE","passwordOne","passwordTwo","error","PasswordChangeForm","props","_this","_Component","call","this","onSubmit","event","state","firebase","doPasswordUpdate","then","setState","Object","assign","catch","preventDefault","onChange","_this$setState","target","name","value","render","_this$state","isInvalid","react_default","a","createElement","type","placeholder","disabled","message","Component","withFirebase","SIGN_IN_METHODS","id","provider","LoginManagement","_initFirebase","firebaseInit","fetchSignInMethods","auth","fetchSignInMethodsForEmail","authUser","email","activeSignInMethods","onSocialLoginLink","currentUser","linkWithPopup","onDefaultLoginLink","password","credential","emailAuthProvider","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","componentDidMount","componentDidUpdate","_this2","map","signInMethod","onlyOneLeft","length","isEnabled","includes","key","LoginManagement_DefaultLoginToggle","onLink","LoginManagement_SocialLoginToggle","SocialLoginToggle","_ref","onClick","DefaultLoginToggle","_this3","_Component2","_this3$setState","_this$props","_this$state2","AccountPage","compose","withEmailVerification","withAuthorization","react","Session","Consumer","username","__webpack_exports__","layout","FirebaseContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","app","doCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","sendEmailVerification","url","process","GATSBY_CONFIRMATION_EMAIL_REDIRECT","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","user","uid","once","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","users","messages","initializeApp","serverValue","database","ServerValue","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","getFirebase","__webpack_require__","d","context","context_withFirebase","react__WEBPACK_IMPORTED_MODULE_0__","AuthUserContext","n","withAuthentication","WithAuthentication","_React$Component","listener","localStorage","setItem","JSON","stringify","removeItem","_proto","prototype","parse","getItem","componentWillUnmount","react__WEBPACK_IMPORTED_MODULE_0___default","_context__WEBPACK_IMPORTED_MODULE_1__","Provider","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","LANDING","SIGN_UP","SIGN_IN","HOME","ACCOUNT","PASSWORD_FORGET","ADMIN","m","module","exports","require","default","condition","WithAuthorization","_len","arguments","args","Array","_key","apply","concat","navigate","ROUTES","WithEmailVerification","onSendEmailVerification","isSent","needsEmailVerification","Session_withAuthorization","Session_withEmailVerification","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","NavigationAuth","gatsby_browser_entry","to","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Layout","Promise","all","e","t","bind","values","AppWithAuthentication","children","components_Navigation","PasswordForgetForm","react__WEBPACK_IMPORTED_MODULE_2___default","PasswordForgetLink","gatsby__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-account-js-741b089e96fa901b2db0.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SIGN_IN_METHODS = [\r\n  {\r\n    id: 'password',\r\n    provider: null,\r\n  },\r\n  {\r\n    id: 'google.com',\r\n    provider: 'googleProvider',\r\n  },\r\n  {\r\n    id: 'facebook.com',\r\n    provider: 'facebookProvider',\r\n  },\r\n  {\r\n    id: 'twitter.com',\r\n    provider: 'twitterProvider',\r\n  },\r\n];\r\n\r\nclass LoginManagement extends Component {\r\n  _initFirebase = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSignInMethods: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  firebaseInit = () => {\r\n    if (this.props.firebase && !this._initFirebase) {\r\n      this._initFirebase = true;\r\n\r\n      this.fetchSignInMethods();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.firebaseInit();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.firebaseInit();\r\n  }\r\n\r\n  fetchSignInMethods = () => {\r\n    this.props.firebase.auth\r\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\r\n      .then(activeSignInMethods =>\r\n        this.setState({ activeSignInMethods, error: null }),\r\n      )\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onSocialLoginLink = provider => {\r\n    this.props.firebase.auth.currentUser\r\n      .linkWithPopup(this.props.firebase[provider])\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onDefaultLoginLink = password => {\r\n    const credential = this.props.firebase.emailAuthProvider.credential(\r\n      this.props.authUser.email,\r\n      password,\r\n    );\r\n\r\n    this.props.firebase.auth.currentUser\r\n      .linkAndRetrieveDataWithCredential(credential)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onUnlink = providerId => {\r\n    this.props.firebase.auth.currentUser\r\n      .unlink(providerId)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  render() {\r\n    const { activeSignInMethods, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        Sign In Methods:\r\n        <ul>\r\n          {SIGN_IN_METHODS.map(signInMethod => {\r\n            const onlyOneLeft = activeSignInMethods.length === 1;\r\n            const isEnabled = activeSignInMethods.includes(\r\n              signInMethod.id,\r\n            );\r\n\r\n            return (\r\n              <li key={signInMethod.id}>\r\n                {signInMethod.id === 'password' ? (\r\n                  <DefaultLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onDefaultLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                ) : (\r\n                  <SocialLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onSocialLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        {error && error.message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SocialLoginToggle = ({\r\n  onlyOneLeft,\r\n  isEnabled,\r\n  signInMethod,\r\n  onLink,\r\n  onUnlink,\r\n}) =>\r\n  isEnabled ? (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onUnlink(signInMethod.id)}\r\n      disabled={onlyOneLeft}\r\n    >\r\n      Deactivate {signInMethod.id}\r\n    </button>\r\n  ) : (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onLink(signInMethod.provider)}\r\n    >\r\n      Link {signInMethod.id}\r\n    </button>\r\n  );\r\n\r\nclass DefaultLoginToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { passwordOne: '', passwordTwo: '' };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onLink(this.state.passwordOne);\r\n    this.setState({ passwordOne: '', passwordTwo: '' });\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onlyOneLeft,\r\n      isEnabled,\r\n      signInMethod,\r\n      onUnlink,\r\n    } = this.props;\r\n\r\n    const { passwordOne, passwordTwo } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return isEnabled ? (\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onUnlink(signInMethod.id)}\r\n        disabled={onlyOneLeft}\r\n      >\r\n        Deactivate {signInMethod.id}\r\n      </button>\r\n    ) : (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Link {signInMethod.id}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(LoginManagement);\r\n","import React, { Fragment } from 'react';\r\nimport { compose } from 'recompose';\r\n\r\nimport Layout from '../components/layout';\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification,\r\n} from '../components/Session';\r\nimport PasswordForgetForm from '../components/PasswordForget';\r\nimport PasswordChangeForm from '../components/PasswordChange';\r\nimport LoginManagement from '../components/LoginManagement';\r\n\r\nconst AccountPageBase = () => (\r\n  <Fragment>\r\n    <AuthUserContext.Consumer>\r\n      {authUser => (\r\n        <div>\r\n          <h1>Account: {authUser.username}</h1>\r\n          <h1>E-Mail: {authUser.email}</h1>\r\n          {/* <PasswordForgetForm />\r\n          <PasswordChangeForm />\r\n          <LoginManagement authUser={authUser} /> */}\r\n        </div>\r\n      )}\r\n    </AuthUserContext.Consumer>\r\n  </Fragment>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nconst AccountPage = compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition),\r\n)(AccountPageBase);\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <AccountPage />\r\n  </Layout>\r\n);\r\n","const config = {\r\n  apiKey: \"AIzaSyCi6P1abcy72QaTwfV7ZQHczpsJo6wOzvw\",\r\n  authDomain: \"gatsbyfb-8e6d6.firebaseapp.com\",\r\n  databaseURL: \"https://gatsbyfb-8e6d6.firebaseio.com\",\r\n  projectId: \"gatsbyfb-8e6d6\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"921327650405\",\r\n  appId: \"1:921327650405:web:e247fd630bfd6e9a\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor(app) {\r\n    app.initializeApp(config);\r\n\r\n    /* Helper */\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n\r\n    /* Firebase APIs */\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n    /* Social Sign In Method Provider */\r\n\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () =>\r\n    this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignInWithFacebook = () =>\r\n    this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n  doSignInWithTwitter = () =>\r\n    this.auth.signInWithPopup(this.twitterProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.GATSBY_CONFIRMATION_EMAIL_REDIRECT,\r\n    });\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  // *** Message API ***\r\n\r\n  message = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n}\r\n\r\nlet firebase;\r\n\r\nfunction getFirebase(app, auth, database) {\r\n  if (!firebase) {\r\n    firebase = new Firebase(app, auth, database);\r\n  }\r\n\r\n  return firebase;\r\n}\r\n\r\nexport default getFirebase;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport getFirebase from './firebase';\r\n\r\nexport default getFirebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    _initFirebase = false;\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    firebaseInit = () => {\r\n      if (this.props.firebase && !this._initFirebase) {\r\n        this._initFirebase = true;\r\n\r\n        this.listener = this.props.firebase.onAuthUserListener(\r\n          authUser => {\r\n            localStorage.setItem(\r\n              'authUser',\r\n              JSON.stringify(authUser),\r\n            );\r\n            this.setState({ authUser });\r\n          },\r\n          () => {\r\n            localStorage.removeItem('authUser');\r\n            this.setState({ authUser: null });\r\n          },\r\n        );\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.setState({\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      });\r\n\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener && this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const ADMIN = '/admin';\r\nexport const ADMIN_DETAILS = '/admin/:id';\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\r\nimport { navigate } from 'gatsby';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    _initFirebase = false;\r\n\r\n    firebaseInit = () => {\r\n      if (this.props.firebase && !this._initFirebase) {\r\n        this._initFirebase = true;\r\n\r\n        this.listener = this.props.firebase.onAuthUserListener(\r\n          authUser => {\r\n            if (!condition(authUser)) {\r\n              navigate(ROUTES.SIGN_IN);\r\n            }\r\n          },\r\n          () => navigate(ROUTES.SIGN_IN),\r\n        );\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener && this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst needsEmailVerification = authUser =>\r\n  authUser &&\r\n  !authUser.emailVerified &&\r\n  authUser.providerData\r\n    .map(provider => provider.providerId)\r\n    .includes('password');\r\n\r\nconst withEmailVerification = Component => {\r\n  class WithEmailVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { isSent: false };\r\n    }\r\n\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check you E-Mails (Spam\r\n                    folder included) for a confirmation E-Mail.\r\n                    Refresh this page once you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check you E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail or send\r\n                    another confirmation E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithEmailVerification);\r\n};\r\n\r\nexport default withEmailVerification;\r\n","import AuthUserContext from './context';\r\nimport withAuthentication from './withAuthentication';\r\nimport withAuthorization from './withAuthorization';\r\nimport withEmailVerification from './withEmailVerification';\r\n\r\nexport {\r\n  AuthUserContext,\r\n  withAuthentication,\r\n  withAuthorization,\r\n  withEmailVerification,\r\n};\r\n","export const ADMIN = 'ADMIN';\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={firebase ? firebase.doSignOut : () => {}}\r\n  >\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport * as ROLES from '../../constants/roles';\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? (\r\n        <NavigationAuth authUser={authUser} />\r\n      ) : (\r\n        <NavigationNonAuth />\r\n      )\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    {!!authUser.roles[ROLES.ADMIN] && (\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin</Link>\r\n      </li>\r\n    )}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport Navigation from './Navigation';\r\nimport getFirebase, { FirebaseContext } from './Firebase';\r\nimport withAuthentication from './Session/withAuthentication';\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    firebase: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const app = import('firebase/app');\r\n    const auth = import('firebase/auth');\r\n    const database = import('firebase/database');\r\n\r\n    Promise.all([app, auth, database]).then(values => {\r\n      const firebase = getFirebase(values[0]);\r\n\r\n      this.setState({ firebase });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FirebaseContext.Provider value={this.state.firebase}>\r\n        <AppWithAuthentication {...this.props} />\r\n      </FirebaseContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppWithAuthentication = withAuthentication(({ children }) => (\r\n  <Fragment>\r\n    <Navigation />\r\n    <hr />\r\n    {children}\r\n  </Fragment>\r\n));\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default withFirebase(PasswordForgetForm);\r\n\r\nexport { PasswordForgetLink };\r\n"],"sourceRoot":""}