{"version":3,"sources":["webpack:///./src/components/Users/UserList.js","webpack:///./src/pages/admin.js","webpack:///./src/components/Firebase/firebase.js","webpack:///./src/components/Firebase/context.js","webpack:///./src/components/Firebase/index.js","webpack:///./src/components/Session/context.js","webpack:///./src/components/Session/withAuthentication.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/constants/routes.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Session/withAuthorization.js","webpack:///./src/components/Session/withEmailVerification.js","webpack:///./src/components/Session/index.js","webpack:///./src/constants/roles.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SignOut/index.js","webpack:///./src/components/Navigation/index.js","webpack:///./src/components/layout.js"],"names":["UserList","props","_this","_Component","call","this","_initFirebase","firebaseInit","firebase","setState","loading","users","on","snapshot","usersObject","val","usersList","Object","keys","map","key","assign","uid","state","componentDidMount","componentDidUpdate","componentWillUnmount","off","render","_this$state","react_default","a","createElement","user","email","username","Component","withFirebase","AdminPage","compose","withEmailVerification","withAuthorization","authUser","roles","ROLES","react","Users_UserList","__webpack_exports__","layout","FirebaseContext","React","createContext","Consumer","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","app","doCreateUserWithEmailAndPassword","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","process","GATSBY_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","once","then","dbUser","emailVerified","providerData","db","ref","message","messages","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","getFirebase","__webpack_require__","d","context","context_withFirebase","react__WEBPACK_IMPORTED_MODULE_0__","AuthUserContext","n","withAuthentication","WithAuthentication","_React$Component","listener","localStorage","setItem","JSON","stringify","removeItem","_proto","prototype","parse","getItem","react__WEBPACK_IMPORTED_MODULE_0___default","_context__WEBPACK_IMPORTED_MODULE_1__","Provider","value","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","LANDING","SIGN_UP","SIGN_IN","HOME","ACCOUNT","PASSWORD_FORGET","ADMIN","m","module","exports","require","default","condition","WithAuthorization","_len","arguments","length","args","Array","_key","apply","concat","navigate","ROUTES","_this2","WithEmailVerification","onSendEmailVerification","isSent","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","Session_withAuthorization","Session_withEmailVerification","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","json","NavigationAuth","gatsby_browser_entry","to","SignOut","NavigationNonAuth","Navigation","Session","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Layout","Promise","all","e","t","bind","values","AppWithAuthentication","children","components_Navigation"],"mappings":"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","file":"component---src-pages-admin-js-b938fe9bb2cc198e7fbd.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserList extends Component {\r\n  _initFirebase = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  firebaseInit = () => {\r\n    if (this.props.firebase && !this._initFirebase) {\r\n      this._initFirebase = true;\r\n\r\n      this.setState({ loading: true });\r\n\r\n      this.props.firebase.users().on('value', snapshot => {\r\n        const usersObject = snapshot.val();\r\n\r\n        const usersList = Object.keys(usersObject).map(key => ({\r\n          ...usersObject[key],\r\n          uid: key,\r\n        }));\r\n\r\n        this.setState({\r\n          users: usersList,\r\n          loading: false,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.firebaseInit();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.firebaseInit();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.uid}>\r\n              <span>\r\n                <strong>ID:</strong> {user.uid}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.username}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React, { Fragment } from 'react';\r\nimport { compose } from 'recompose';\r\n\r\nimport Layout from '../components/layout';\r\nimport {\r\n  withAuthorization,\r\n  withEmailVerification,\r\n} from '../components/Session';\r\nimport { UserList } from '../components/Users';\r\nimport * as ROLES from '../constants/roles';\r\n\r\nconst AdminPageBase = () => (\r\n  <Fragment>\r\n    <h1>Admin</h1>\r\n    <p>The Admin Page is accessible by every signed in admin user.</p>\r\n\r\n    <UserList />\r\n  </Fragment>\r\n);\r\n\r\nconst condition = authUser =>\r\n  authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nconst AdminPage = compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition),\r\n)(AdminPageBase);\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <AdminPage />\r\n  </Layout>\r\n);\r\n","const config = {\r\n  apiKey: \"AIzaSyCi6P1abcy72QaTwfV7ZQHczpsJo6wOzvw\",\r\n  authDomain: \"gatsbyfb-8e6d6.firebaseapp.com\",\r\n  databaseURL: \"https://gatsbyfb-8e6d6.firebaseio.com\",\r\n  projectId: \"gatsbyfb-8e6d6\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"921327650405\",\r\n  appId: \"1:921327650405:web:e247fd630bfd6e9a\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor(app) {\r\n    app.initializeApp(config);\r\n\r\n    /* Helper */\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n\r\n    /* Firebase APIs */\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n    /* Social Sign In Method Provider */\r\n\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () =>\r\n    this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignInWithFacebook = () =>\r\n    this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n  doSignInWithTwitter = () =>\r\n    this.auth.signInWithPopup(this.twitterProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.GATSBY_CONFIRMATION_EMAIL_REDIRECT,\r\n    });\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  // *** Message API ***\r\n\r\n  message = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n}\r\n\r\nlet firebase;\r\n\r\nfunction getFirebase(app, auth, database) {\r\n  if (!firebase) {\r\n    firebase = new Firebase(app, auth, database);\r\n  }\r\n\r\n  return firebase;\r\n}\r\n\r\nexport default getFirebase;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport getFirebase from './firebase';\r\n\r\nexport default getFirebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    _initFirebase = false;\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    firebaseInit = () => {\r\n      if (this.props.firebase && !this._initFirebase) {\r\n        this._initFirebase = true;\r\n\r\n        this.listener = this.props.firebase.onAuthUserListener(\r\n          authUser => {\r\n            localStorage.setItem(\r\n              'authUser',\r\n              JSON.stringify(authUser),\r\n            );\r\n            this.setState({ authUser });\r\n          },\r\n          () => {\r\n            localStorage.removeItem('authUser');\r\n            this.setState({ authUser: null });\r\n          },\r\n        );\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.setState({\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      });\r\n\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener && this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const ADMIN = '/admin';\r\nexport const ADMIN_DETAILS = '/admin/:id';\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\r\nimport { navigate } from 'gatsby';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    _initFirebase = false;\r\n\r\n    firebaseInit = () => {\r\n      if (this.props.firebase && !this._initFirebase) {\r\n        this._initFirebase = true;\r\n\r\n        this.listener = this.props.firebase.onAuthUserListener(\r\n          authUser => {\r\n            if (!condition(authUser)) {\r\n              navigate(ROUTES.SIGN_IN);\r\n            }\r\n          },\r\n          () => navigate(ROUTES.SIGN_IN),\r\n        );\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.firebaseInit();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener && this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst needsEmailVerification = authUser =>\r\n  authUser &&\r\n  !authUser.emailVerified &&\r\n  authUser.providerData\r\n    .map(provider => provider.providerId)\r\n    .includes('password');\r\n\r\nconst withEmailVerification = Component => {\r\n  class WithEmailVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { isSent: false };\r\n    }\r\n\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check you E-Mails (Spam\r\n                    folder included) for a confirmation E-Mail.\r\n                    Refresh this page once you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check you E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail or send\r\n                    another confirmation E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithEmailVerification);\r\n};\r\n\r\nexport default withEmailVerification;\r\n","import AuthUserContext from './context';\r\nimport withAuthentication from './withAuthentication';\r\nimport withAuthorization from './withAuthorization';\r\nimport withEmailVerification from './withEmailVerification';\r\n\r\nexport {\r\n  AuthUserContext,\r\n  withAuthentication,\r\n  withAuthorization,\r\n  withEmailVerification,\r\n};\r\n","export const ADMIN = 'ADMIN';\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={firebase ? firebase.doSignOut : () => {}}\r\n  >\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport * as ROLES from '../../constants/roles';\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? (\r\n        <NavigationAuth authUser={authUser} />\r\n      ) : (\r\n        <NavigationNonAuth />\r\n      )\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    {!!authUser.roles[ROLES.ADMIN] && (\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin</Link>\r\n      </li>\r\n    )}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport Navigation from './Navigation';\r\nimport getFirebase, { FirebaseContext } from './Firebase';\r\nimport withAuthentication from './Session/withAuthentication';\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    firebase: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const app = import('firebase/app');\r\n    const auth = import('firebase/auth');\r\n    const database = import('firebase/database');\r\n\r\n    Promise.all([app, auth, database]).then(values => {\r\n      const firebase = getFirebase(values[0]);\r\n\r\n      this.setState({ firebase });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FirebaseContext.Provider value={this.state.firebase}>\r\n        <AppWithAuthentication {...this.props} />\r\n      </FirebaseContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppWithAuthentication = withAuthentication(({ children }) => (\r\n  <Fragment>\r\n    <Navigation />\r\n    <hr />\r\n    {children}\r\n  </Fragment>\r\n));\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}